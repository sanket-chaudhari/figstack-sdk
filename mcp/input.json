{
    "files": [
      {
        "path": "plugins/demo-mint-component-audit/index.ts",
        "content": "import { getFile } from '../../core/figma-api/figma-api.js';\nimport { getPagesInFile, getTopLevelFramesInPage } from '../../core/traversal/traversal.js';\nimport { analyzeFrameComponentUsage } from './analyze.js';\nimport 'dotenv/config';\n\nconst FILE_KEY = process.env.TEST_FILE_KEY;\n\n(async () => {\n  if (!FILE_KEY) {\n    console.error('‚ùå TEST_FILE_KEY missing in .env');\n    process.exit(1);\n  }\n\n  try {\n    const file = await getFile(FILE_KEY);\n    const pages = getPagesInFile(file);\n    console.log(`‚úÖ Analyzing ${pages.length} page(s)...\\n`);\n\n    for (const page of pages) {\n      const frames = getTopLevelFramesInPage(page);\n      console.log(`üìÑ Page: ${page.name} ‚Üí ${frames.length} frame(s)`);\n\n      for (const frame of frames) {\n        const report = analyzeFrameComponentUsage(frame);\n        console.log(`  üñº Frame: ${frame.name}`);\n\n        console.log(`    ‚úÖ Mint components: ${report.mintCount}`);\n        console.log(`    üß© Local components: ${report.localCount}`);\n        console.log(`    ‚õî Other component instances: ${report.otherCount}`);\n      }\n    }\n  } catch (err) {\n    console.error('‚ùå Error in plugin:', err);\n  }\n})();"
      },
      {
        "path": "plugins/demo-mint-component-audit/analyze.ts",
        "content": "import { classifyInstance } from './helpers.js';\n\nexport function analyzeFrameComponentUsage(frameNode) {\n  const counts = {\n    mintCount: 0,\n    localCount: 0,\n    otherCount: 0,\n  };\n\n  function walk(node) {\n    if (node.type === 'INSTANCE') {\n      const category = classifyInstance(node);\n      if (category === 'mint') counts.mintCount++;\n      else if (category === 'local') counts.localCount++;\n      else counts.otherCount++;\n    }\n\n    if (node.children && Array.isArray(node.children)) {\n      node.children.forEach(walk);\n    }\n  }\n\n  walk(frameNode);\n  return counts;\n}"
      },
      {
        "path": "plugins/demo-mint-component-audit/helpers.ts",
        "content": "export function classifyInstance(node) {\n  const name = node.componentName?.toLowerCase() || '';\n  if (name.includes('mint')) return 'mint';\n  if (name.includes('_local')) return 'local';\n  return 'other';\n}"
      }
    ],
    "commitMessage": "[Milestone] Enhance demo plugin to classify mint, local, and other component instances"
  }
  