{
    "files": [
      {
        "path": "plugins/demo-mint-component-audit/index.ts",
        "content": "import { getFile } from '../../core/figma-api/figma-api.js';\nimport { getPagesInFile, getTopLevelFramesInPage } from '../../core/traversal/traversal.js';\nimport { logFileDefinedComponents, logInstanceUsageAcrossFrames } from './analyze.js';\nimport 'dotenv/config';\n\nconst FILE_KEY = process.env.TEST_FILE_KEY;\n\n(async () => {\n  if (!FILE_KEY) {\n    console.error('‚ùå TEST_FILE_KEY missing in .env');\n    process.exit(1);\n  }\n\n  try {\n    const file = await getFile(FILE_KEY);\n    const componentsById = file.components || {};\n    const pages = getPagesInFile(file);\n\n    console.log('üì¶ Components Defined in File:');\n    logFileDefinedComponents(componentsById);\n\n    console.log('\\nüîç Component Usage Across Pages and Frames:\\n');\n    for (const page of pages) {\n      const frames = getTopLevelFramesInPage(page);\n      console.log(`üìÑ Page: ${page.name} ‚Üí ${frames.length} frame(s)`);\n      for (const frame of frames) {\n        console.log(`  üñº Frame: ${frame.name}`);\n        logInstanceUsageAcrossFrames(frame, componentsById);\n      }\n    }\n  } catch (err) {\n    console.error('‚ùå Error in plugin:', err);\n  }\n})();"
      },
      {
        "path": "plugins/demo-mint-component-audit/analyze.ts",
        "content": "export function logFileDefinedComponents(componentsById) {\n  const entries = Object.entries(componentsById);\n  if (entries.length === 0) {\n    console.log('  (none found)');\n    return;\n  }\n\n  for (const [id, def] of entries) {\n    console.log(`  - ${def.name} (id: ${id})`);\n  }\n}\n\nexport function logInstanceUsageAcrossFrames(frameNode, componentsById) {\n  function walk(node) {\n    if (node.type === 'INSTANCE') {\n      const resolved = componentsById?.[node.componentId]?.name || '[Unknown]';\n      console.log(`    ‚Ä¢ Uses: ${resolved} (componentId: ${node.componentId})`);\n    }\n    if (node.children && Array.isArray(node.children)) {\n      node.children.forEach(walk);\n    }\n  }\n\n  walk(frameNode);\n}"
      }
    ],
    "commitMessage": "Add logging for defined components and their usage across all frames"
  }
  