{
  "files": [
    {
      "path": "scripts/sandbox/dump-file-json.ts",
      "content": "// Sandbox-only: dumps the full Figma file JSON to figma-file-dump.json\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as dotenv from 'dotenv';\n\ndotenv.config();\n\nconst token = process.env.FIGMA_PERSONAL_ACCESS_TOKEN!;\nconst fileKey = process.env.TEST_FILE_KEY!;\n\nif (!token || !fileKey) {\n  console.error('‚ùå  Missing FIGMA_PERSONAL_ACCESS_TOKEN or TEST_FILE_KEY in .env');\n  process.exit(1);\n}\n\nasync function dump() {\n  const url = `https://api.figma.com/v1/files/${fileKey}`;\n  console.log('üì°  Fetching:', url);\n\n  const res = await fetch(url, {\n    headers: { 'X-Figma-Token': token },\n  });\n\n  if (!res.ok) {\n    console.error(`‚ùå  Figma API responded ${res.status}`);\n    process.exit(1);\n  }\n\n  const json = await res.json();\n  const outFile = path.resolve('figma-file-dump.json');\n  fs.writeFileSync(outFile, JSON.stringify(json, null, 2), 'utf8');\n  console.log('‚úÖ  Full JSON saved to', outFile);\n}\n\ndump().catch(err => console.error('‚ùå  Unexpected error:', err));\n"
    },
    {
      "path": ".gitignore",
      "content": "# Node\nnode_modules/\ndist/\nbuild/\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Environment variables\n.env\n.env.local\n.env.development\n.env.production\n.env.test\n.env.*.local\n\n# MCP and diagnostic outputs\nmcp/input.json\nmcp/output.json\ndiagnostics/*.txt\ndiagnostics/*.log\n\n# Snapshots and large data outputs\n**/snapshots/*.json\n**/snapshots/*.txt\n**/output.json\n**/__temp__/\n\n# OS/IDE\n.DS_Store\n*.swp\n.vscode/\n.idea/\n*.sublime-workspace\n*.sublime-project\n\n# Optional CLI history or shell state\n.history\n*.bak\n.env\n\n# Figma dump\nfigma-file-dump.json\n"
    }
  ],
  "commitMessage": "feat(sandbox): add dump-file-json.ts and keep full .gitignore while ignoring figma-file-dump.json"
}
