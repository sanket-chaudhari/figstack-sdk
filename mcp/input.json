{
    "files": [
      {
        "path": "services/snapshot-service/getSnapshot.ts",
        "content": "import { getFile } from '../../core/figma-api/figma-api.js';\n\n/**\n * Returns the full raw Figma file JSON response for a given fileKey\n */\nexport async function getSnapshot({ fileKey }) {\n  if (!fileKey || typeof fileKey !== 'string') {\n    throw new Error('fileKey is required to getSnapshot');\n  }\n\n  const file = await getFile(fileKey);\n  return file;\n}"
      },
      {
        "path": "plugins/demo-mint-component-audit/generate-snapshot.ts",
        "content": "import { getSnapshot } from '../../services/snapshot-service/getSnapshot.js';\nimport fs from 'fs-extra';\nimport path from 'path';\nimport 'dotenv/config';\n\nconst FILE_KEY = process.env.TEST_FILE_KEY;\n\n(async () => {\n  if (!FILE_KEY) {\n    console.error('❌ TEST_FILE_KEY not set in .env');\n    process.exit(1);\n  }\n\n  try {\n    const fileData = await getSnapshot({ fileKey: FILE_KEY });\n\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const safeFileName = fileData.name.replace(/[^a-zA-Z0-9_-]/g, '-');\n    const filename = `snapshot--${safeFileName}--${timestamp}.json`;\n    const outputPath = path.join('plugins', 'demo-mint-component-audit', 'snapshots', filename);\n\n    await fs.ensureDir(path.dirname(outputPath));\n    await fs.writeJson(outputPath, fileData, { spaces: 2 });\n\n    console.log(`✅ Snapshot saved to: ${outputPath}`);\n  } catch (err) {\n    console.error('❌ Failed to generate snapshot:', err);\n  }\n})();"
      }
    ],
    "commitMessage": "Add snapshot-service and scoped snapshot writer for demo plugin"
  }
  