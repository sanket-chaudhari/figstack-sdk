{
    "files": [
      {
        "path": "core/utils/resolveLatestSnapshot.ts",
        "content": "import fs from 'fs-extra';\nimport path from 'path';\n\n/**\n * Resolves the most recent snapshot file in a given folder.\n * Expects snapshot files to follow this format:\n *    snapshot--<context>--<timestamp>.json\n */\nexport async function resolveLatestSnapshot(folderPath: string): Promise<string> {\n  const files = await fs.readdir(folderPath);\n  const snapshotFiles = files.filter(f => f.startsWith('snapshot--') && f.endsWith('.json'));\n\n  if (snapshotFiles.length === 0) {\n    throw new Error(`No snapshot files found in: ${folderPath}`);\n  }\n\n  const sorted = snapshotFiles.sort((a, b) => {\n    const aTime = extractTimestamp(a);\n    const bTime = extractTimestamp(b);\n    return bTime.localeCompare(aTime); // descending\n  });\n\n  return path.join(folderPath, sorted[0]);\n}\n\nfunction extractTimestamp(filename: string): string {\n  const match = filename.match(/--(\\d{4}-\\d{2}-\\d{2}[^.]+)\\.json$/);\n  if (!match) return '';\n  return match[1];\n}"
      },
      {
        "path": "plugins/demo-mint-component-audit/generate-report.ts",
        "content": "import fs from 'fs-extra';\nimport path from 'path';\nimport { resolveLatestSnapshot } from '../../core/utils/resolveLatestSnapshot.js';\nimport 'dotenv/config';\n\n(async () => {\n  const snapshotDir = path.join('plugins', 'demo-mint-component-audit', 'snapshots');\n  const snapshotPath = await resolveLatestSnapshot(snapshotDir);\n  const file = await fs.readJson(snapshotPath);\n\n  // From here on, you can analyze `file` like before\n  console.log(`âœ… Using latest snapshot: ${snapshotPath}`);\n\n  // Example minimal output\n  console.log(`File contains ${file.document.children?.length || 0} top-level canvas nodes.`);\n  // Replace this block with your actual report generator\n})();"
      }
    ],
    "commitMessage": "Add resolveLatestSnapshot utility and integrate into demo plugin report"
  }
  